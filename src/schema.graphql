# import ExerciseWhereInput from './generated/prisma.graphql'

type Query {
  exercises(where: ExerciseWhereInput): [Exercise!]!
}

type Mutation {
  createUser(data: CreateUserInput): AuthPayload!
  login(data: LoginUserInput!): AuthPayload!
  createExercise(data: CreateExerciseInput!): Exercise!
}

input CreateUserInput {
  username: String!
  email: String!
  password: String!
}

input LoginUserInput {
  username: String!
  password: String!
}

input CreateExerciseInput {
  name: String!
  bodySection: String
  primaryMover: String
  movementType: String
  trainingPhases: [TrainingPhaseInput!]
  workoutTypes: [WorkoutTypeInput!]
  equipment: [EquipmentPieceInput!]
}

input TrainingPhaseInput {
  name: String!
}

input WorkoutTypeInput {
  name: String!
}

input EquipmentPieceInput {
  name: String!
}

type User {
  id: ID!
  username: String!
  email: String!
  password: String!
  exercises: [Exercise!]!
}

type Exercise {
  name: String!
  bodySection: String
  primaryMover: String
  movementType: String
  trainingPhases: [TrainingPhase!]
  workoutTypes: [WorkoutType!]
  equipment: [EquipmentPiece!]
}

type AuthPayload {
  user: User!
  token: String!
}

type TrainingPhase {
  name: String!
}

type WorkoutType {
  name: String!
}

type EquipmentPiece {
  name: String!
}